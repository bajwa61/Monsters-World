{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchField","placeholder","handleChange","onChange","type","App","onChangeSearch","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","filterMonster","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGaA,EAAK,SAACC,GACf,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJjBC,G,MAAS,SAACR,GACnB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAACN,GAChB,OAAO,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,WCNnDM,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aACnC,OACI,uBACIC,SAAUD,EACVE,KAAK,SACLT,KAAK,cACLM,YAAaA,MCwCVI,G,wDA1Cb,aAAc,IAAD,8BACX,gBAeFC,eAAiB,SAACC,GAEhB,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,QAAO,WACzCC,QAAQC,IAAI,EAAKC,WAjBnB,EAAKA,MAAM,CACPhB,SAAS,GACTW,YAAY,IAJL,E,qDAQb,WAAoB,IAAD,OAEjBM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKV,SAAS,CAACV,SAASoB,S,oBAcxC,WAAS,IAAD,OACAC,EAAcC,KAAKN,MAAMhB,SAASuB,QAAO,SAAC5B,GAC1C,OAAOA,EAAQE,KAAK2B,cAAcC,SAAS,EAAKT,MAAML,YAAYa,kBAGxE,OACM,gCACI,gDACA,cAAC,EAAD,CAAarB,YAAY,uBAAuBC,aAAckB,KAAKd,iBACnE,cAAC,EAAD,CAAUR,SAAUqB,W,GArChBK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.280bdd41.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card=(props) =>{\r\n    return(\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n            <h3>{props.monster.name}</h3>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card } from '../card/card-component';\r\nimport './card-list.style.css';\r\n\r\nexport const CardList=(props) =>{\r\n    return(\r\n        <div className=\"card-list\">\r\n            {\r\n                props.monsters.map((monster) => {\r\n                    return <Card monster={monster} key={monster.id}/>\r\n                })\r\n            }\r\n        </div> \r\n    )\r\n};\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchField=({placeholder,handleChange}) =>{\r\n    return(\r\n        <input \r\n            onChange={handleChange} \r\n            type=\"search\" \r\n            name=\"searchField\" \r\n            placeholder={placeholder}    \r\n        />\r\n    )\r\n}","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchField } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state={\n        monsters:[],\n        searchField:''\n   }\n  }\n\n  componentDidMount(){\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(json => this.setState({monsters:json}))\n  \n  }\n\n  onChangeSearch = (e) => {\n\n    this.setState({searchField:e.target.value},() =>{\n      console.log(this.state);\n    })\n\n  }\n\n\n\n  render(){\n    const filterMonster=this.state.monsters.filter((monster) =>{\n          return monster.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n    });\n\n    return(\n          <div>\n              <h1>Monsters World</h1>\n              <SearchField placeholder=\"Search Monsters Here\" handleChange={this.onChangeSearch}/>\n              <CardList monsters={filterMonster} />\n          </div> \n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}